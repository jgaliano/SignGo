"""
Django settings for sistema project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from django.contrib.messages import constants as messages
import environ


MESSAGE_TAGS = {
    messages.ERROR: 'danger',  # Mapea el nivel ERROR a la clase 'danger' de Bootstrap
    messages.WARNING: 'warning',
    messages.SUCCESS: 'success',
    messages.INFO: 'info',
}

LOGIN_REDIRECT_URL = '/home/'
LOGIN_URL = '/accounts/login/'

BASE_DIR = Path(__file__).resolve().parent.parent

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env.dev'))

SECRET_KEY = env('SECRET_KEY')

DEBUG = True

LANGUAGE_CODE = 'es-es'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'signbox',
    'oneshot',
    'fouridentity',
    'vol',
    'webhook',
    'app',
    'eSignAnyWhere',
    'pagoplanilla',
    'silk',
    'storages',
    'django_ses',
    'flujofirma'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'silk.middleware.SilkyMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

ROOT_URLCONF = 'sistema.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'app.context_processors.user_context_processor',
                'app.context_processors.verificar_grupo'
            ],
        },
    },
]

WSGI_APPLICATION = 'sistema.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DATABASE_NAME'),
        'USER': env('DATABASE_USER'),
        'PASSWORD': env('DATABASE_PASSWORD'),
        'HOST': env('DATABASE_HOST'),
        'PORT': env('DATABASE_PORT'),
    }
}


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'America/Mexico_City'
USE_TZ = True

USE_I18N = True

USE_TZ = True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


EMAIL_BACKEND = 'django_ses.SESBackend'
EMAIL_HOST = 'email-smtp.us-east-2.amazonaws.com'
EMAIL_PORT = 587  #
AWS_DEFAULT_REGION = 'us-east-2'
EMAIL_USE_TLS = True  
EMAIL_USE_SSL = False  

AWS_SES_ACCESS_KEY_ID = env('AWS_SES_ACCESS_KEY_ID')
AWS_SES_SECRET_ACCESS_KEY = env('AWS_SES_SECRET_ACCESS_KEY')

DEFAULT_FROM_EMAIL = 'notificaciones@signgo.com.gt'


X_FRAME_OPTIONS = 'ALLOW-FROM https://signgo.com.gt'

FORCE_STATIC_FILE_SERVING = True

CSRF_TRUSTED_ORIGINS = ['https://signgo.com.gt', 'http://10.10.10.9', 'http://localhost', 'https://6196-190-242-50-170.ngrok-free.app']
ALLOWED_HOSTS = [
    '*',
    'localhost',
    'signgo.com.gt',
    '192.168.11.29',
    'api.uanataca.com',
    'signcloud.uanataca.com',
    'billing.uanataca.com',
    'tsa.uanataca.com',
    'cryptowallet.uanataca.com',
    'lima.uanataca.com',
    'cryptoapi.uanataca.com',
    'cms.uanataca.com',
    'delegation.uanataca.com',
    'api.sandbox.uanataca.com',
    'signcloud.sandbox.uanataca.com',
    'billing.sandbox.uanataca.com',
    'tsa.sandbox.uanataca.com',
    'cryptowallet.sandbox.uanataca.com',
    'lima.sandbox.uanataca.com',
    'cryptoapi.sandbox.uanataca.com',
    'cms.sandbox.uanataca.com',
    'delegation.sandbox.uanataca.com',
    '94.24.113.19',
    '94.24.113.20',
    '94.24.113.21',
    '212.36.67.211',
    '212.36.67.212',
    '6196-190-242-50-170.ngrok-free.app'   
]


IP_API_SIGNBOX = "###"
IP_API_VOL = "###"

PASSWORD_RESET_TIMEOUT_DAYS = 1

STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
        "OPTIONS": {
            "access_key": env('AWS_ACCESS_KEY'),
            "secret_key": env('AWS_SECRET_KEY'),
            "bucket_name": env('AWS_BUCKET_NAME'),
            "region_name": env('AWS_REGION_NAME'),
            "querystring_auth": env('AWS_QUERYSTRING_AUTH'),
            "custom_domain": env('AWS_CUSTOM_DOMAIN'),
            "file_overwrite": env('AWS_FILE_OVERWRITE'),
        },
    },
    "staticfiles": {
        "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
        "OPTIONS": {
            "access_key": env('AWS_ACCESS_KEY'),
            "secret_key": env('AWS_SECRET_KEY'),
            "bucket_name": env('AWS_BUCKET_NAME'),
            "region_name": env('AWS_REGION_NAME'),
            "querystring_auth": env('AWS_QUERYSTRING_AUTH'),
            "custom_domain": env('AWS_CUSTOM_DOMAIN'),
            "file_overwrite": env('AWS_FILE_OVERWRITE'),
        },
    },
}

STATIC_URL = "https://signgo-bucket.s3.us-east-2.amazonaws.com/static/"

MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'

AWS_QUERYSTRING_AUTH = False